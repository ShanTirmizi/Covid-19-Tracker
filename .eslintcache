[{"C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\index.js":"1","C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\reportWebVitals.js":"2","C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\App.js":"3","C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\components\\Map.js":"4","C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\components\\StatsBox.jsx":"5","C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\components\\Table\\Table.js":"6","C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\components\\Graph.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":3507,"mtime":1610619006736,"results":"11","hashOfConfig":"9"},{"size":175,"mtime":1610558760190,"results":"12","hashOfConfig":"9"},{"size":765,"mtime":1610566575584,"results":"13","hashOfConfig":"9"},{"size":554,"mtime":1610566575588,"results":"14","hashOfConfig":"9"},{"size":2784,"mtime":1610619576430,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vfs6nv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\index.js",[],["33","34"],"C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\App.js",["35"],"import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport StatsBox from './components/StatsBox';\r\nimport Map from './components/Map';\r\nimport Table from './components/Table/Table';\r\nimport Graph from './components/Graph'\r\n\r\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core'\r\n\r\n\r\nconst url = 'https://disease.sh/v3/covid-19/countries'\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState('worldwide');\r\n  const [countryStats, setCountryStats] = useState({});\r\n  const [tableData, setTableData] = useState([]); \r\n\r\n\r\n  const fetchCountries = async () => {\r\n    try {\r\n      const response = await fetch(url)\r\n      const countriesData = await response.json()\r\n      const countries = countriesData.map((country) => ({\r\n        id: country.population,\r\n        name: country.country,\r\n        value: country.countryInfo.iso2,\r\n      }) )\r\n\r\n      const dataSorted = countriesData.sort((a, b) => b.cases - a.cases)\r\n      setTableData(dataSorted);\r\n      setCountries(countries);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const fetchWorldwide = async () => {\r\n    const allUrl = 'https://disease.sh/v3/covid-19/all'\r\n    try {\r\n      const response = await fetch(allUrl)\r\n      const countryData = await response.json()\r\n      setCountryStats(countryData)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    fetchWorldwide()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetchCountries()\r\n  }, [countries])\r\n\r\n\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryValue = e.target.value\r\n    const dataUrl = countryValue === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : \r\n    `https://disease.sh/v3/covid-19/countries/${countryValue}`\r\n    try {\r\n      const response = await fetch(dataUrl)\r\n      const countryData = await response.json()\r\n      // console.log(countryData)\r\n      setCountry(countryValue)\r\n      setCountryStats(countryData)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__left\">\r\n        <div className=\"app__header\">\r\n          <h1>covid 19 tracker</h1>\r\n          <FormControl className='app__dropdown'>\r\n            <Select variant='outlined'\r\n              onChange={onCountryChange}\r\n              value={country}>\r\n              <MenuItem value='worldwide'>Worldwide</MenuItem>\r\n              {countries.map((country) => {\r\n                {/* console.log(country) */}\r\n                return (\r\n                <MenuItem key={country.id} value={country.value}>{country.name}</MenuItem>\r\n                )\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className=\"app__stats\">\r\n          <StatsBox title='Coronavirus Cases' cases={countryStats.todayCases} total={countryStats.cases} />\r\n          <StatsBox title='Recovered' cases={countryStats.todayRecovered} total={countryStats.recovered} />\r\n          <StatsBox title='Deaths' cases={countryStats.todayDeaths} total={countryStats.deaths}/>\r\n        </div>\r\n        <Map />\r\n      </div>\r\n      <Card className=\"app__right\">\r\n            <CardContent>\r\n              <h3>Live Cases by Country</h3>\r\n              <Table countries={tableData} />\r\n              <h3>Worldwide new cases</h3>\r\n            </CardContent>\r\n            <Graph />\r\n      </Card>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\components\\Map.js",[],"C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\components\\StatsBox.jsx",[],["36","37"],"C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\components\\Table\\Table.js",[],"C:\\Users\\shahn\\Desktop\\Covid-19-Tracker\\covid-19-tracker\\src\\components\\Graph.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":86,"column":17,"nodeType":"44","messageId":"45","endLine":86,"endColumn":45},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["48"],["49"],"no-global-assign","no-unsafe-negation"]